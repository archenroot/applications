<project default="run-gpu">
	<property name="root" value="../../.." />
	<property name="lib" value="lib" />
	<property name="lib.dir" value="${root}${file.separator}${lib}" />
	<property name="src.dir" value="src" />
	<property name="build.dir" value="build/classes" />
	<property name="rootbeer" value="${lib.dir}${file.separator}rootbeer-1.x-SNAPSHOT.jar" />
	<!-- Custom Settings -->
	<!-- <property name="output.file" value="" /> -->
	<property name="output.file-jar" value="${output.file}.jar" />
	<property name="output.file-gpu-jar" value="${output.file}-GPU.jar" />
	<property name="output.file-rb-jar" value="${output.file}-rb.jar" />
	<property name="output.file-rb-gpu-jar" value="${output.file}-rb-GPU.jar" />
	<!-- Custom Settings -->
	<!--
	<property name="libjars-gpu" value="${lib}${file.separator}tjungblut-math-1.0.jar" />
	<property name="libjars-cpu" value="${lib}${file.separator}tjungblut-math-1.0.jar,${lib}${file.separator}rootbeer-1.x-SNAPSHOT.jar" />
	<property name="rb-package.dir" value="at/illecker/hama/rootbeer/examples/piestimator" />
	<property name="rb-kernel.class" value="PiEstimatorKernel.class" />
	<property name="gpu.class" value="at.illecker.hama.rootbeer.examples.piestimator.PiEstimatorGpuBSP" />
	<property name="cpu.class" value="at.illecker.hama.rootbeer.examples.piestimator.PiEstimatorCpuBSP" />
    -->

	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${lib.dir}${file.separator}ant-contrib-0.6.jar" />
		</classpath>
	</taskdef>

	<path id="master-classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
		<pathelement path="${build.dir}" />
	</path>

	<target name="clean">
		<delete dir="build" />
		<delete file="${output.file-jar}" />
		<delete file="${output.file-gpu-jar}" />
		<delete file="${output.file-rb-jar}" />
		<delete file="${output.file-rb-gpu-jar}" />
	</target>

	<target name="compile">
		<mkdir dir="${build.dir}" />
		<javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="master-classpath" includeantruntime="false" />
	</target>

	<target name="jar-rb" depends="compile">
		<echo>Rootbeer Kernel: ${build.dir}${file.separator}${rb-package.dir}${file.separator}${rb-kernel.class}</echo>
		<jar destfile="${output.file-rb-jar}">
			<zipfileset dir="${build.dir}${file.separator}${rb-package.dir}" includes="${rb-kernel.class}" fullpath="${rb-package.dir}${file.separator}${rb-kernel.class}" />
		</jar>
	</target>

	<target name="jar-gpu-combine" depends="compile">
		<jar destfile="${output.file-jar}">
			<zipfileset dir="${build.dir}" excludes="${rb-package.dir}${file.separator}${rb-kernel.class}" />
			<zipgroupfileset dir="." includes="${output.file-rb-gpu-jar}" />
			<manifest>
				<attribute name="Main-Class" value="${gpu.class}" />
			</manifest>
		</jar>
	</target>

	<target name="jar-gpu" depends="compile">
		<antcall target="jar-rb" />
		<!-- 
		# Pack libraries
        #java -jar ../pack.jar -mainjar PiEstimator.jar -libjar $LIBS/tjungblut-math-1.0.jar -destjar PiEstimator-rb.jar
		-->
		<echo>java -jar ${rootbeer} ${output.file-rb-jar} ${output.file-rb-gpu-jar}</echo>
		<exec executable="java">
			<arg value="-jar" />
			<arg value="${rootbeer}" />
			<arg value="${output.file-rb-jar}" />
			<arg value="${output.file-rb-gpu-jar}" />
		</exec>
		<delete file="${output.file-rb-jar}" />
		<antcall target="jar-gpu-combine" />
		<delete file="${output.file-rb-gpu-jar}" />
		<echo>Including lib jars: ${libjars-gpu}</echo>
		<for list="${libjars-gpu}" param="libjar">
			<sequential>
				<echo>jar uf ${output.file-jar} -C ${root} @{libjar}</echo>
				<exec executable="jar">
					<arg value="uf" />
					<arg value="${output.file-jar}" />
					<arg value="-C" />
					<arg value="${root}" />
					<arg value="@{libjar}" />
				</exec>
			</sequential>
		</for>
		<move file="${output.file-jar}" tofile="${output.file-gpu-jar}" />
	</target>

	<target name="jar-cpu" depends="compile">
		<jar destfile="${output.file-jar}" basedir="${build.dir}">
			<manifest>
				<attribute name="Main-Class" value="${cpu.class}" />
			</manifest>
		</jar>
		<echo>Including lib jars: ${libjars-gpu-cpu}</echo>
		<for list="${libjars-cpu}" param="libjar">
			<sequential>
				<echo>jar uf ${output.file-jar} -C ${root} @{libjar}</echo>
				<exec executable="jar">
					<arg value="uf" />
					<arg value="${output.file-jar}" />
					<arg value="-C" />
					<arg value="${root}" />
					<arg value="@{libjar}" />
				</exec>
			</sequential>
		</for>
	</target>

	<target name="run-gpu">
		<echo>RUN GPU for ${output.file}</echo>
		<antcall target="clean" />
		<antcall target="jar-gpu" />
		<echo>hama jar ${output.file-gpu-jar}</echo>
		<exec executable="hama">
			<arg value="jar" />
			<arg value="${output.file-gpu-jar}" />
		</exec>
	</target>

	<target name="run-cpu">
		<echo>RUN CPU for ${output.file}</echo>
		<antcall target="clean" />
		<antcall target="jar-cpu" />
		<!-- java -jar $ROOTBEER PiEstimator.jar PiEstimator-GPU.jar -nemu -->
		<echo>hama jar ${output.file-jar}</echo>
		<exec executable="hama">
			<arg value="jar" />
			<arg value="${output.file-jar}" />
		</exec>
	</target>

</project>
